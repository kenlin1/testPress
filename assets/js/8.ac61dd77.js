(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{283:function(a,v,J){"use strict";J.r(v);var t=J(14),e=Object(t.a)({},(function(){var a=this,v=a._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[v("h1",{attrs:{id:"java-native-interface-jni"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#java-native-interface-jni"}},[a._v("#")]),a._v(" Java Native Interface (JNI)")]),a._v(" "),v("p",[a._v("Java Native Interface (JNI) 是一种用于在Java程序中调用本地库（native library）的技术。它允许Java程序员调用本地库中的函数，以便在Java程序中使用本地库中的功能。")]),a._v(" "),v("p",[a._v("JNI是一种技术，它允许Java程序员调用本地库中的函数，以便在Java程序中使用本地库中的功能。它使用Java Native Interface（JNI）框架，允许Java程序员调用本地库中的函数，以便在Java程序中使用本地库中的功能。")]),a._v(" "),v("p",[a._v("JNI框架由三个部分组成：Java虚拟机（JVM），本地库（native library）和JNI接口（JNI interface）。Java虚拟机是一个虚拟机，它负责执行Java程序。本地库是一个由本地代码编写的库，它包含了一些本地函数，可以被Java程序调用。JNI接口是一个接口，它允许Java程序调用本地库中的函数。")]),a._v(" "),v("p",[a._v("JNI框架的工作原理是：当Java程序调用本地库中的函数时，JVM会将该函数的参数传递给JNI接口，然后JNI接口会将参数传递给本地库，本地库会执行函数，并将结果返回给JNI接口，最后JNI接口会将结果返回给JVM，JVM会将结果返回给Java程序。")]),a._v(" "),v("p",[a._v("JNI技术可以用来实现跨平台的程序，因为它可以让Java程序调用本地库中的函数，而本地库可以在不同的操作系统上运行。此外，JNI技术还可以用来实现高性能的程序，因为它可以让Java程序调用本地库中的函数，而本地库可以比Java程序更快地执行函数。")]),a._v(" "),v("p",[a._v("总之，Java Native Interface（JNI）是一种用")])])}),[],!1,null,null,null);v.default=e.exports}}]);